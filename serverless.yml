service: serverless-flask

frameworkVersion: ">=1.1.0 <2.0.0"

# plugins:
#   - serverless-python-requirements
#   - serverless-wsgi
#
# custom:
#   tableName: 'professors-table-${self:provider.stage}'
#   wsgi:
#     app: app.app
#     packRequirements: false
#   pythonRequirements:
#     dockerizePip: non-linux

provider:
    name: aws
    runtime: python3.6
    environment:
        PROFESSORS_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PROFESSORS_TABLE}"
functions:
    create:
        handler: api/create.create
        events:
            - http:
                path: api
                method: post
                cors: true

    list:
        handler: api/list.list
        events:
            - http:
                path: api
                method: get
                cors: true

resources:
    Resources:
        ProfessorsTable:
            Type: 'AWS::DynamoDB::Table'
            Properties:
                AttributeDefinitions:
                    -
                        AttributeName: Department
                        AttributeType: S
                    -
                        AttributeName: Name
                        AttributeType: S
                KeySchema:
                    -
                        AttributeName: Department
                        KeyType: HASH
                    -
                        AttributeName: Name
                        KeyType: RANGE
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                TableName: ${self:provider.environment.PROFESSORS_TABLE}
